name: CI

on:
  push:
    branches: [master, dev]
  pull_request:
  workflow_dispatch:

jobs:
  run-tests:
    name: Run tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: "ubuntu-22.04"
            python: "3.12"
          - os: "ubuntu-22.04"
            python: "3.11"
          - os: "ubuntu-22.04"
            python: "3.10"
    steps:

      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: "Set up Python ${{ matrix.python }}"
        uses: actions/setup-python@v5
        with:
          python-version: "${{ matrix.python }}"

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            git build-essential cmake lcov

      - name: Install C++ dependencies
        run: sudo bash setup.sh --cubpackpp --geos --eigen3

      - name: Install Catch2
        run: |
          git clone --branch v3.4.0 --depth 1 https://github.com/catchorg/Catch2.git
          cd Catch2
          cmake -Bbuild -H. -DBUILD_TESTING=OFF 
          sudo cmake --build build/ --target install -j $(nproc)

      - name: Build C++
        run: |
          cmake -B build \
            -DJPATHGEN_ENABLE_UNIT_TESTING=ON \
            -DJPATHGEN_ENABLE_CODE_COVERAGE=ON \
            -DJPATHGEN_ENABLE_VECTORIZATION=OFF \
            -DCMAKE_BUILD_TYPE=Release
          cmake --build build -j $(nproc) --config Release

      - name: Run C++ tests
        run: |
          ctest --output-on-failure --test-dir build -C Release

      - name: Install python deps
        run: |
          pip install "pybind11[global]>=2.11.0" # Install separately as otherwise pybind11 is not found by cmake
          CMAKE_PREFIX_PATH="$(pybind11-config --cmakedir);$CMAKE_PREFIX_PATH" pip install ".[test]"

      - name: Run python tests
        run: |
          python -m pytest test/python

      - name: Prepare files for codecov
        run: |
          lcov --capture --directory build --output-file coverage.info
          lcov --remove coverage.info --output-file coverage.info '/usr/*' '*/test/*' '*/extern/*'

      - name: Upload code test coverage report
        uses: codecov/codecov-action@v3.1.5
        if: ${{ (github.actor != 'dependabot[bot]') && ( !env.ACT ) }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml,./coverage.info
          fail_ci_if_error: true
